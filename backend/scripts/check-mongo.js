//
const dotenv = require("dotenv")
const { Client } = require('pg')

// Configura√ß√£o
dotenv.config()

const checkPostgres = async () => {
  try {
    console.log("üîç Verificando conex√£o com PostgreSQL...")
    console.log(`üìç URL de conex√£o: ${process.env.DATABASE_URL}`)

    // Tentar conectar
    const client = new Client({
      connectionString: process.env.DATABASE_URL || "postgresql://localhost:5432/gestao-escolar"
    })

    await client.connect()
    console.log("‚úÖ Conectado ao PostgreSQL com sucesso!")

    // Verificar bancos de dados
    const dbQuery = await client.query(`
      SELECT datname, pg_size_pretty(pg_database_size(datname)) as size 
      FROM pg_database
    `)

    console.log("üìä Bancos de dados dispon√≠veis:")
    dbQuery.rows.forEach((db) => {
      console.log(`   - ${db.datname} (${db.size})`)
    })

    // Verificar tabelas no banco atual
    const tablesQuery = await client.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
    `)

    if (tablesQuery.rows.length > 0) {
      console.log("üìã Tabelas no banco 'gestao-escolar':")
      tablesQuery.rows.forEach((table) => {
        console.log(`   - ${table.table_name}`)
      })
    } else {
      console.log("üìã Nenhuma tabela encontrada no banco 'gestao-escolar'")
      console.log("üí° Execute as migra√ß√µes para criar as tabelas iniciais")
    }

    // Verificar vers√£o do PostgreSQL
    const versionQuery = await client.query('SELECT version()')
    console.log(`üîß Vers√£o do PostgreSQL: ${versionQuery.rows[0].version.split(' ')[1]}`)

    await client.end()
    console.log("üîå Conex√£o fechada")
  } catch (error) {
    console.error("‚ùå Erro ao conectar com PostgreSQL:")
    console.error(`   ${error.message}`)

    if (error.message.includes("ECONNREFUSED")) {
      console.log("\nüí° Poss√≠veis solu√ß√µes:")
      console.log("   1. Verifique se o PostgreSQL est√° rodando:")
      console.log("      - Windows: Verifique o servi√ßo 'PostgreSQL' no Gerenciador de Tarefas")
      console.log("      - macOS: brew services start postgresql")
      console.log("      - Linux: sudo systemctl start postgresql")
      console.log("   2. Verifique se a URL de conex√£o est√° correta no arquivo .env")
      console.log("   3. Verifique se o pgAdmin est√° configurado corretamente")
    }

    process.exit(1)
  }
}

// Executar verifica√ß√£o
checkPostgres()
